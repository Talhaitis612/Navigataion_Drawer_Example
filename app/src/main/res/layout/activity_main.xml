<?xml version="1.0" encoding="utf-8"?>
<!--
DrawerLayout acts as top level container for window content that allows for interactive “drawer” views
to be pulled out from one or both vertical edges of the window.
 Drawer position and layout is controlled by using
layout_gravity attribute on child views corresponding
to which side of view we want the drawer to emerge from like left to right.
////////////////////An important note///////////
-In this step we create the three menu items that should be displayed in Drawer.

-->
<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawer_layout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:context=".MainActivity">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical">
        <!-- Let's add fragment -->
        <FrameLayout
            android:id="@+id/frame"
            android:layout_width="match_parent"
            android:layout_height="match_parent" />
    </LinearLayout>
    <!--
         Navigation view to show the menu items
    -->
<!--For adding a Navigation Drawer,
declare your UI(user interface) with a DrawerLayout object as the root(parent) view of your layout. \
Inside this  DrawerLayout add one view that contains
the main content of the screen means primary layout
 that displays when the drawer is hidden and
 other view that contains the contents for the navigation drawer.
    -->
    <com.google.android.material.navigation.NavigationView
        android:id="@+id/navigation"
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        app:menu="@menu/nav_items" />
</androidx.drawerlayout.widget.DrawerLayout>
